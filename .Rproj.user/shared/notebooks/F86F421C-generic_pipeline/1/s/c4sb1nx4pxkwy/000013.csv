"0","get_stats_kmers_all_types <- function(df_virus) {  "
"0","  # Drop lines that correspond to the distance between first nucleotide and first kmer"
"0","  df_virus <- df_virus %>% "
"0","    filter(!is.na(segm_size)) "
"0","  "
"0","  virus_values <- df_virus %>%"
"0","    group_by(SequenceName, Kmer,Type) %>%"
"0","    summarize(mean_segm_size = mean(log10(segm_size), na.rm = TRUE),"
"0","              sd_segm_size = ifelse(n() > 1, sd(log10(segm_size), na.rm = TRUE), 0),"
"0","              count = n(),"
"0","              freq = n()/max(Position),"
"0","              .groups = 'drop')"
"0","  "
"0","  results <- virus_values %>%"
"0","    group_by(Kmer) %>%"
"0","    summarize("
"0","      mean_mean_log10_segments = mean(mean_segm_size, na.rm = TRUE), "
"0","      mean_sd_log10_segments = mean(sd_segm_size, na.rm = TRUE), "
"0","      mean_count = mean(count, na.rm = TRUE),"
"0","      sd_count = ifelse(n() > 1, sd(count, na.rm = TRUE), NA), "
"0","      mean_freq_virus = mean(freq, na.rm = TRUE), "
"0","      .groups = 'drop'"
"0","    )"
"0","  return(results)"
"0","}"
"0","v_kmers_stats <- get_stats_kmers_all_types(v_kmer_pos_df)"
"0","complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, vector_genome_path)"
"0",""
"0","complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))"
"0","complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))"
"0",""
"0","complete_kmer_stats_filtered <- complete_kmer_stats %>%"
"0","  group_by(Kmer) %>%"
"0","  filter(all(mean_count > 10)) %>%"
"0","  ungroup()"
"0",""
"0","# Now plot the filtered data"
"0","ggplot(complete_kmer_stats_filtered, aes(x = x_value, y = y_value, color = Kmer, shape = accession_id)) + "
"0","  geom_point(size = 2) +  # Points for each observation"
"0","  labs(title = ""frequency_virus / frequency_mos"", "
"0","       x = ""count per virus / sd segm virus"", "
"0","       y = "" log10(frequency virus) - log10(frequency mos)"") + "
"0","  theme_minimal() + "
"0","  theme(axis.text.x = element_text(hjust = 1)) + "
"0","  expand_limits(x = max(complete_kmer_stats_filtered$x_value) * 1.05,  "
"0","                y = max(complete_kmer_stats_filtered$y_value) * 1.1)"
"0",""
