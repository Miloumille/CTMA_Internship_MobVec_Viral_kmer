download_fastq_vector(accession_id, output_dir, number_of_sequences)
devtools::install("script/V2/kmer_dist_package/")
library(kmer.dist)
# Download Virus genomes
download_virus("data_processed//virus/Virus_list.csv","/data/virus/reference/","all")
download_virus <- function(path_csv_file,path_output,virus_name = "all"){
Virus_csv <- read.csv(path_csv_file)
if (virus_name == "all"){
for (name in unique(Virus_csv$name)){
print(paste("downloading",name))
ids <- Virus_csv$accession_code[Virus_csv$name == name]
combined_sequences <- rentrez::entrez_fetch(db = "nuccore", id = ids, rettype = "fasta", retmode = "text")
write(combined_sequences, file = paste(path_output,name,".fasta",sep = ""))
}
}
else{
ids <- Virus_csv$accession_code[Virus_csv$name == virus_name]
combined_sequences <- entrez_fetch(db = "nuccore", id = ids, rettype = "fasta", retmode = "text")
write(combined_sequences, file = paste(path_output,virus_name,".fasta",sep = ""))
}
}
library(rentrez)
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","/data/virus/reference/","all")
devtools::install("script/V2/kmer_dist_package/")
library(kmer.dist)
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed//virus/reference/","all")
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed//virus/reference/","Alphacoronavirus")
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed//virus/reference/","Alphacoronavirus")
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed/virus/reference/","Alphacoronavirus")
devtools::install("script/V2/kmer_dist_package/")
library(kmer.dist)
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed/virus/reference/","Alphacoronavirus")
library(kmer.dist)
# Download Virus genomes
download_virus("data_processed/virus/Virus_list.csv","data_processed/virus/reference/","Alphacoronavirus")
help(download_virus)
??download_virus
roxygen2::roxygenise("script/V2/kmer_dist_package/")
??download_virus
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(kmer.dist)
library(ShortRead)
virus_name <- "dengue_virus_type_1"
virus_path <- "../data_processed/virus/reference/dengue_virus_type_1.fasta"
fastq_path <- "../data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_spe_first_obs_kmers(virus_path,k,x)
v_kmer_pos_df <- gen_kmers_pos_df(virus_path,best_kmers_list,virus_name)
v_kmers_stats <- get_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
count_kmer_in_fastq <- function(fq, specific_kmer) {
kmer_count <- 0
total_size <- 0
for (seq in sequences) {
total_size <- total_size + nchar(seq)
kmer_count <- kmer_count + (gregexpr(specific_kmer, seq, fixed = TRUE)[[1]] != -1) %>% sum()
}
freq_m <- if (total_size > 0) {
kmer_count / total_size
} else {
0
}
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
for (id in fastq_id_list){
temp_results <- v_kmers_stats
fq1 <- readFastq(paste0(fastq_path,id,"_1.fastq"))
fq2 <- readFastq(paste0(fastq_path,id,"_2.fastq"))
fq = append(fq1,fq2)
kmers <- temp_results$Kmer
temp_results$kmer_count <- numeric(length(kmers))
temp_results$freq_m <- numeric(length(kmers))
for (i in seq_along(kmers)) {
kmer <- kmers[i]
fastq_count <- count_kmer_in_fastq(fq, kmer)
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
temp_results$accession_id <- id
}
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
all_results_df <- do.call(rbind, all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
count_kmer_in_fastq <- function(fq, specific_kmer) {
kmer_count <- 0
total_size <- 0
for (seq in fq) {
total_size <- total_size + nchar(seq)
kmer_count <- kmer_count + (gregexpr(specific_kmer, seq, fixed = TRUE)[[1]] != -1) %>% sum()
}
freq_m <- if (total_size > 0) {
kmer_count / total_size
} else {
0
}
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
for (id in fastq_id_list) {
temp_results <- v_kmers_stats
fq1 <- readFastq(paste0(fastq_path, id, "_1.fastq"))
fq2 <- readFastq(paste0(fastq_path, id, "_2.fastq"))
fq <- c(fq1, fq2)  # Concatenate ShortRead objects correctly
kmers <- temp_results$Kmer
temp_results$kmer_count <- numeric(length(kmers))
temp_results$freq_m <- numeric(length(kmers))
for (i in seq_along(kmers)) {
kmer <- kmers[i]
fastq_count <- count_kmer_in_fastq(fq, kmer)
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
temp_results$accession_id <- id
}
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
all_results_df <- do.call(rbind, all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
count_kmer_in_fastq <- function(sequences, specific_kmer) {
for (seq in sequences) {
total_size <- total_size + nchar(seq)
kmer_count <- kmer_count + (gregexpr(specific_kmer, seq, fixed = TRUE)[[1]] != -1) %>% sum()
}
freq_m <- if (total_size > 0) {
kmer_count / total_size
} else {
0
}
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
for (id in fastq_id_list){
temp_results <- v_kmers_stats
fq1 <- readFastq(paste0(fastq_path,id,"_1.fastq"))
fq2 <- readFastq(paste0(fastq_path,id,"_2.fastq"))
fq = c(fq1,fq2)
kmers <- temp_results$Kmer
temp_results$kmer_count <- numeric(length(kmers))
temp_results$freq_m <- numeric(length(kmers))
for (i in seq_along(kmers)) {
kmer <- kmers[i]
fastq_count <- count_kmer_in_fastq(fq, kmer)
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
temp_results$accession_id <- id
}
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
all_results_df <- do.call(rbind, all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
count_kmer_in_fastq <- function(fq, specific_kmer) {
sequences <- fq
kmer_count <- 0
total_size <- 0
for (seq in sequences) {
total_size <- total_size + nchar(seq)
kmer_count <- kmer_count + sum(gregexpr(specific_kmer, seq, fixed = TRUE)[[1]] != -1)
}
freq_m <- if (total_size > 0) {
kmer_count / total_size
} else {
0
}
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
# Optimized function to count kmer in FASTQ sequences
count_kmer_in_fastq <- function(fq, specific_kmer) {
# Use stringr's str_count for efficient kmer counting
kmer_count <- sum(str_count(fq, specific_kmer))
total_size <- sum(nchar(fq))
# Return kmer count and frequency
freq_m <- if (total_size > 0) kmer_count / total_size else 0
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
# Optimized function to process all FASTQ files
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
# Iterate over each FASTQ file ID
for (id in fastq_id_list) {
# Read both paired-end FASTQ files
fq1 <- readFastq(paste0(fastq_path, id, "_1.fastq"))
fq2 <- readFastq(paste0(fastq_path, id, "_2.fastq"))
fq <- c(as.character(fq1), as.character(fq2))  # Combine sequences
# Initialize result columns
temp_results <- v_kmers_stats
temp_results$kmer_count <- integer(length(temp_results$Kmer))
temp_results$freq_m <- numeric(length(temp_results$Kmer))
# Iterate over all kmers
for (i in seq_along(temp_results$Kmer)) {
kmer <- temp_results$Kmer[i]
# Count kmer occurrences in FASTQ sequences
fastq_count <- count_kmer_in_fastq(fq, kmer)
# Store the results
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
}
# Add accession ID and store results
temp_results$accession_id <- id
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
# Combine results into a single data.table
all_results_df <- rbindlist(all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
library(data.table)
library(stringr)
library(ShortRead)  # for readFastq
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
# Optimized function to count kmer in FASTQ sequences
count_kmer_in_fastq <- function(fq, specific_kmer) {
# Use stringr's str_count for efficient kmer counting
kmer_count <- sum(str_count(fq, specific_kmer))
total_size <- sum(nchar(fq))
# Return kmer count and frequency
freq_m <- if (total_size > 0) kmer_count / total_size else 0
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
# Optimized function to process all FASTQ files
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
# Iterate over each FASTQ file ID
for (id in fastq_id_list) {
# Read both paired-end FASTQ files
fq1 <- readFastq(paste0(fastq_path, id, "_1.fastq"))
fq2 <- readFastq(paste0(fastq_path, id, "_2.fastq"))
# Extract sequences from the ShortReadQ object and combine them
fq <- c(as.character(sread(fq1)), as.character(sread(fq2)))  # Convert to character
# Initialize result columns
temp_results <- v_kmers_stats
temp_results$kmer_count <- integer(length(temp_results$Kmer))
temp_results$freq_m <- numeric(length(temp_results$Kmer))
# Iterate over all kmers
for (i in seq_along(temp_results$Kmer)) {
kmer <- temp_results$Kmer[i]
# Count kmer occurrences in FASTQ sequences
fastq_count <- count_kmer_in_fastq(fq, kmer)
# Store the results
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
}
# Add accession ID and store results
temp_results$accession_id <- id
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
# Combine results into a single data.table
all_results_df <- rbindlist(all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
View(complete_kmer_stats)
View(complete_kmer_stats)
virus_name <- "dengue_virus_type_1"
virus_path <- "../data_processed/virus/reference/dengue_virus_type_1.fasta"
fastq_path <- "../data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_spe_first_obs_kmers(virus_path,k,x)
v_kmer_pos_df <- gen_kmers_pos_df(virus_path,best_kmers_list,virus_name)
v_kmers_stats <- get_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
i
i
count_kmer_in_fastq <- function(fq, specific_kmer) {
kmer_count <- sum(str_count(fq, specific_kmer))
total_size <- sum(nchar(fq))
freq_m <- if (total_size > 0) kmer_count / total_size else 0
return(list(kmer_count = kmer_count, freq_m = freq_m))
}
get_kmer_freq <- function(v_kmers_stats, fastq_path, fastq_id_list) {
all_results_df <- list()
for (id in fastq_id_list) {
fq1 <- readFastq(paste0(fastq_path, id, "_1.fastq"))
fq2 <- readFastq(paste0(fastq_path, id, "_2.fastq"))
fq <- c(as.character(sread(fq1)), as.character(sread(fq2)))
temp_results <- v_kmers_stats
temp_results$kmer_count <- integer(length(temp_results$Kmer))
temp_results$freq_m <- numeric(length(temp_results$Kmer))
for (i in seq_along(temp_results$Kmer)) {
kmer <- temp_results$Kmer[i]
fastq_count <- count_kmer_in_fastq(fq, kmer)
temp_results$kmer_count[i] <- fastq_count$kmer_count
temp_results$freq_m[i] <- fastq_count$freq_m
}
temp_results$accession_id <- id
all_results_df[[length(all_results_df) + 1]] <- temp_results
}
all_results_df <- rbindlist(all_results_df)
return(all_results_df)
}
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
devtools::install("script/kmer_dist_package/")
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(kmer.dist)
library(ShortRead)
virus_name <- "dengue_virus_type_1"
virus_path <- "../data_processed/virus/reference/dengue_virus_type_1.fasta"
fastq_path <- "../data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_spe_first_obs_kmers(virus_path,k,x)
v_kmer_pos_df <- gen_kmers_pos_df(virus_path,best_kmers_list,virus_name)
v_kmers_stats <- get_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(kmer.dist)
library(data.table)
library(ShortRead)
virus_name <- "dengue_virus_type_1"
virus_path <- "../data_processed/virus/reference/dengue_virus_type_1.fasta"
fastq_path <- "../data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_spe_first_obs_kmers(virus_path,k,x)
v_kmer_pos_df <- gen_kmers_pos_df(virus_path,best_kmers_list,virus_name)
v_kmers_stats <- get_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(kmer.dist)
library(data.table)
library(ShortRead)
v_fasta_folder <- "data_processed/virus/all_dengue/"
fastq_path <- "data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_gen_first_obs_kmers(v_fasta_folder,k,x)
gen_kmers_pos_df <- function(fasta_file, kmers_list, virus_type) {
find_kmer_positions <- function(sequence, kmer) {
positions <- gregexpr(kmer, sequence)[[1]]
positions <- positions[positions > 0]
return(positions)
}
genomes <- readDNAStringSet(fasta_file)
kmers_df <- data.frame(SequenceName = character(), Kmer = character(), Position = integer(), Type = character())
for (i in seq_along(genomes)) {
sequence_name <- names(genomes)[i]
sequence <- as.character(genomes[i])
sequence_length <- nchar(sequence)
for (kmer in kmers_list) {
positions <- find_kmer_positions(sequence, kmer)
if (length(positions) > 0) {
temp_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = positions, Type = virus_type)
kmers_df <- rbind(kmers_df, temp_df)
}
final_position_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = sequence_length, Type = virus_type)
kmers_df <- rbind(kmers_df, final_position_df)
}
}
kmers_df <- kmers_df %>%
filter(Kmer %in% kmers_list) %>%
arrange(SequenceName, Kmer, Position) %>%
group_by(SequenceName, Kmer) %>%
mutate(
segm_size = Position - lag(Position),
log10_segm_size = ifelse(is.na(segm_size), NA, log10(segm_size + 1))
) %>%
ungroup()
return(kmers_df)
}
v_fasta_folder
k
x
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(kmer.dist)
library(data.table)
library(ShortRead)
best_kmers_list <- gen_gen_first_obs_kmers(v_fasta_folder,k,x)
gen_kmers_pos_df <- function(fasta_file, kmers_list, virus_type) {
find_kmer_positions <- function(sequence, kmer) {
positions <- gregexpr(kmer, sequence)[[1]]
positions <- positions[positions > 0]
return(positions)
}
genomes <- readDNAStringSet(fasta_file)
kmers_df <- data.frame(SequenceName = character(), Kmer = character(), Position = integer(), Type = character())
for (i in seq_along(genomes)) {
sequence_name <- names(genomes)[i]
sequence <- as.character(genomes[i])
sequence_length <- nchar(sequence)
for (kmer in kmers_list) {
positions <- find_kmer_positions(sequence, kmer)
if (length(positions) > 0) {
temp_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = positions, Type = virus_type)
kmers_df <- rbind(kmers_df, temp_df)
}
final_position_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = sequence_length, Type = virus_type)
kmers_df <- rbind(kmers_df, final_position_df)
}
}
print(kmers)
kmers_df <- kmers_df %>%
filter(Kmer %in% kmers_list) %>%
arrange(SequenceName, Kmer, Position) %>%
group_by(SequenceName, Kmer) %>%
mutate(
segm_size = Position - lag(Position),
log10_segm_size = ifelse(is.na(segm_size), NA, log10(segm_size + 1))
) %>%
ungroup()
return(kmers_df)
}
best_kmers_list <- gen_gen_first_obs_kmers(v_fasta_folder,k,x)
v_fasta_folder <- "../data_processed/virus/all_dengue/"
fastq_path <- "../data_processed/vector/RNA_seq/"
fastq_id_list <- c("SRR23079314","SRR8482202")
k <- 6
x <- 100
best_kmers_list <- gen_gen_first_obs_kmers(v_fasta_folder,k,x)
comb_v_kmer_pos_df <- list()
# -----  Create dist DF for all viruses types ----- #
v_fasta_files <- tools::file_path_sans_ext(list.files(path = v_fasta_folder ,pattern = "\\.(fasta)$",full.names = FALSE))
for (v_fasta_file in v_fasta_files) {
v_kmer_pos_df <- gen_kmers_pos_df(paste(v_fasta_folder,v_fasta_file,".fasta",sep = ""), best_kmers_list,v_fasta_file)
comb_v_kmer_pos_df[[length(comb_v_kmer_pos_df) + 1]] <- v_kmer_pos_df
}
gen_kmers_pos_df <- function(fasta_file, kmers_list, virus_type) {
find_kmer_positions <- function(sequence, kmer) {
positions <- gregexpr(kmer, sequence)[[1]]
positions <- positions[positions > 0]
return(positions)
}
genomes <- readDNAStringSet(fasta_file)
kmers_df <- data.frame(SequenceName = character(), Kmer = character(), Position = integer(), Type = character())
for (i in seq_along(genomes)) {
sequence_name <- names(genomes)[i]
sequence <- as.character(genomes[i])
sequence_length <- nchar(sequence)
for (kmer in kmers_list) {
positions <- find_kmer_positions(sequence, kmer)
if (length(positions) > 0) {
temp_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = positions, Type = virus_type)
kmers_df <- rbind(kmers_df, temp_df)
}
final_position_df <- data.frame(SequenceName = sequence_name, Kmer = kmer, Position = sequence_length, Type = virus_type)
kmers_df <- rbind(kmers_df, final_position_df)
}
}
kmers_df <- kmers_df %>%
filter(Kmer %in% kmers_list) %>%
arrange(SequenceName, Kmer, Position) %>%
group_by(SequenceName, Kmer) %>%
mutate(
segm_size = Position - lag(Position),
log10_segm_size = ifelse(is.na(segm_size), NA, log10(segm_size + 1))
) %>%
ungroup()
return(kmers_df)
}
comb_v_kmer_pos_df <- list()
# -----  Create dist DF for all viruses types ----- #
v_fasta_files <- tools::file_path_sans_ext(list.files(path = v_fasta_folder ,pattern = "\\.(fasta)$",full.names = FALSE))
for (v_fasta_file in v_fasta_files) {
v_kmer_pos_df <- gen_kmers_pos_df(paste(v_fasta_folder,v_fasta_file,".fasta",sep = ""), best_kmers_list,v_fasta_file)
comb_v_kmer_pos_df[[length(comb_v_kmer_pos_df) + 1]] <- v_kmer_pos_df
}
comb_v_kmer_pos_df <- do.call(rbind, comb_v_kmer_pos_df)
# -----   Get stats of segments   ----- #
v_kmers_stats <- get_stats_kmers(comb_v_kmer_pos_df)
# -----   Add mosquito stats    -----#
complete_kmer_stats <- get_kmer_freq(v_kmers_stats, fastq_path, fastq_id_list)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / complete_kmer_stats$mean_sd_virus
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats <- complete_kmer_stats %>%
filter(mean_count > 5)
ggplot(complete_kmer_stats, aes(x = x_value, y = y_value, color = accession_id)) +
geom_text(aes(label = paste0(Kmer, "\n", mean_count)),
vjust = -0.5, size = 2) +
labs(title = "frequency_virus -- frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats$x_value) * 1.05,
y = max(complete_kmer_stats$y_value) * 1.1)
