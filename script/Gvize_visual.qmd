```{r}
library(Gviz)
library(Biostrings)

# Define the vector of paths to the FASTA files
fasta_paths <- c(
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", 
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_2/NC_001474.2.fasta", 
  "../data_processed/virus/dengue/dengue_type_3/NC_001475.2.fasta", 
  "../data_processed/virus/dengue/dengue_type_4/NC_002640.1.fasta"
)

# Define the k-mer of interest
kmer <- "AGAGAG"

# Function to read a FASTA file and find k-mer positions
find_kmer_positions <- function(fasta_path, kmer) {
  genome <- readDNAStringSet(fasta_path)[[1]]  # Read the genome from FASTA file
  kmer_pos <- matchPattern(kmer, genome)
  starts <- start(kmer_pos)
  ends <- end(kmer_pos)
  return(data.frame(start = starts, end = ends, strand = "+"))
}

# Create genome axis track
genomeTrack <- GenomeAxisTrack()

# Create a list to store the annotation tracks
kmerTracks <- list()

# Read the reference genome from the first file
reference_genome <- readDNAStringSet(fasta_paths[1])[[1]]

# Create the reference k-mer track
kmerTracks[[1]] <- AnnotationTrack(start = find_kmer_positions(fasta_paths[1], kmer)$start, 
                                   end = find_kmer_positions(fasta_paths[1], kmer)$start + 1,
                                   name = "Reference", chromosome = "chr1", fill = "red", height = 0.5)

# Define colors for the variants (other than the reference)
variant_colors <- c("blue", "green", "orange")

# Loop through the other FASTA files and create corresponding annotation tracks
for (i in 2:length(fasta_paths)) {
  variant_name <- paste("Variant", i - 1, sep = " ")
  df_variant <- find_kmer_positions(fasta_paths[i], kmer)
  kmerTracks[[i]] <- AnnotationTrack(start = df_variant$start, 
                                     end = df_variant$start + 1,
                                     name = variant_name, 
                                     chromosome = "chr1", 
                                     fill = variant_colors[i - 1], 
                                     height = 0.5)
}

# Calculate genome length (using the reference genome)
genome_length <- nchar(reference_genome)

# Plot tracks together
plotTracks(kmerTracks, from = 1, to = genome_length, margin = 10, sizes = rep(0.5, length(kmerTracks)), stacking = "dense")
```

```{r}
library(ggplot2)
library(Biostrings)
library(reshape2)

# Define the vector of paths to the FASTA files
fasta_paths <- c(
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta",
  "../data_processed/virus/dengue/dengue_type_2/NC_001474.2.fasta", 
  "../data_processed/virus/dengue/dengue_type_3/NC_001475.2.fasta", 
  "../data_processed/virus/dengue/dengue_type_4/NC_002640.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/PQ357536.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/PQ357537.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/PQ357538.1.fasta",
  "../data_processed/virus/dengue/dengue_type_1/PQ357540.1.fasta"
)

# Define the k-mer of interest
kmer <- "AGAGAG"

# Function to read a FASTA file and find k-mer positions
find_kmer_positions <- function(fasta_path, kmer) {
  genome <- readDNAStringSet(fasta_path)[[1]]  # Read the genome from FASTA file
  kmer_pos <- matchPattern(kmer, genome)  # Find all positions of the k-mer
  starts <- start(kmer_pos)  # Get the start positions of the matches
  return(data.frame(Position = starts, Genome = basename(fasta_path)))  # Return positions with genome name
}

# Create an empty list to store the data frames for each genome
kmer_data_list <- list()

# Loop through each FASTA file and extract k-mer positions
for (i in 1:length(fasta_paths)) {
  kmer_data_list[[i]] <- find_kmer_positions(fasta_paths[i], kmer)
}

# Combine all the k-mer data into one data frame
kmer_data <- do.call(rbind, kmer_data_list)

# Now, let's plot the k-mer positions using ggplot2
ggplot(kmer_data, aes(x = Position, y = Genome, color = Genome)) +
  geom_point(size = 1, shape = 16) +  # Add points (dots) at the positions where k-mer is found
  labs(title = paste("K-mer Presence: ", kmer), 
       x = "Genomic Position", 
       y = "Genome") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        legend.position = "none") +
  scale_color_brewer(palette = "Set3") +  # Assign a color palette to the genomes
  coord_cartesian(clip = 'off')
```

```{r}
library(KmerEnrich)
library(dplyr)
find_kmer_positions <- function(virus_genome_path, kmer) {
    genome <- readDNAStringSet(virus_genome_path)[[1]]
    kmer_pos <- matchPattern(kmer, genome)
    starts <- Biostrings::start(kmer_pos)
    return(data.frame(Position = starts, Genome = basename(virus_genome_path),kmer = kmer))
}

virus_genome_path <- "../data_processed/virus/dengue/dengue_type_2/NC_001474.2.fasta"
kmer_list <- c("CTAACA", "AGAAAG", "TTAGAG")
all_positions <- do.call(rbind, lapply(kmer_list, function(kmer) {
    find_kmer_positions(virus_genome_path, kmer)
}))


ggplot(all_positions, aes(x = Position, y = 0, color = kmer)) +
    geom_point(size = 0.5) +  # Plot points
    scale_y_continuous(limits = c(-0.2, 0.2)) +  # Keep all points on the same horizontal line
    labs(x = "Position on Genome", y = "", color = "K-mer") +
    theme_minimal() +
    theme(axis.text.y = element_blank(), axis.ticks.y = element_blank()) +
    ggtitle("K-mer Positions on Genome")

```
