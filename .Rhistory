positions2$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "GAACAG", "y_value"][1][1], nrow(positions2))
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined
View(positions1)
View(positions_combined)
positions_combined$next_position <- c(Position[-1], NA)
ggplot(data, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1)
geom_point(color = "red", size = 3) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions_combined$next_position <- c(Position[-1], NA)
ggplot(data, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions_combined$next_position <- c(Position[-1], NA)
positions_combined$next_position <- c(Position[-1], NA)
positions_combined
complete_kmer_stats
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][1][1], nrow(positions1))
positions1
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], nrow(positions1))
positions1
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "GAACAG")
positions2$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "GAACAG", "y_value"][[1]], nrow(positions2))
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined$next_position <- c(Position[-1], NA)
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
positions_combined
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
positions_combined
ggplot(data, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], nrow(positions1))
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAA")
positions2$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "GAACAG", "y_value"][[1]], nrow(positions2))
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1) +
geom_point(color = "red", size = 3) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "blue", color = "blue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions_combined
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAAA")
positions2$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "GAACAG", "y_value"][[1]], nrow(positions2))
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 2) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions_combined
library(ggplot2)
find_kmer_positions <- function(fasta_path, kmer) {
genome <- readDNAStringSet(fasta_path)[[1]]  # Read the genome from FASTA file
kmer_pos <- matchPattern(kmer, genome)  # Find all positions of the k-mer
starts <- start(kmer_pos)  # Get the start positions of the matches
return(data.frame(Position = starts, Genome = basename(fasta_path),kmer = Kmer))  # Return positions with genome name
}
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value","Kmer"][[1]], nrow(positions1))
find_kmer_positions <- function(fasta_path, kmer) {
genome <- readDNAStringSet(fasta_path)[[1]]  # Read the genome from FASTA file
kmer_pos <- matchPattern(kmer, genome)  # Find all positions of the k-mer
starts <- start(kmer_pos)  # Get the start positions of the matches
return(data.frame(Position = starts, Genome = basename(fasta_path)))  # Return positions with genome name
}
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value","Kmer"][[1]], nrow(positions1))
positions1
complete_kmer_stats
positions1
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1$enrich <- rep(complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", c("y_value","Kmer")][[1]], nrow(positions1))
positions1
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], Kmer = "AGAGAG")
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAAA")
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AAAAAA", "y_value"][[1]], Kmer = "AGAGAG")
positions1
complete_kmer_stats
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], Kmer = "AGAGAG")
positions1
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAAA")
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAAA")positions2 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AAAAAA", "y_value"][[1]], Kmer = "AGAGAG")
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AAAAAA")
positions2 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AAAAAA", "y_value"][[1]], Kmer = "AGAGAG")
positions1
positions2
complete_kmer_stats
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
positions2 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AACAGT", "y_value"][[1]], Kmer = "AGAGAG")
positions2
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1,aes(Kmer)) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1,aes(Kmer)) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1,aes(Kmer)) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], Kmer = "AGAGAG")
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
positions2 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AACAGT", "y_value"][[1]], Kmer = "AACAGT")
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], Kmer = "AGAGAG")
positions1
positions2
positions1
positions2
positions2
positions2
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
find_kmer_positions <- function(fasta_path, kmer) {
genome <- readDNAStringSet(fasta_path)[[1]]  # Read the genome from FASTA file
kmer_pos <- matchPattern(kmer, genome)  # Find all positions of the k-mer
starts <- start(kmer_pos)  # Get the start positions of the matches
return(data.frame(Position = starts, Genome = basename(fasta_path)))  # Return positions with genome name
}
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
positions2
positions1 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AGAGAG")
positions1 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AGAGAG", "y_value"][[1]], Kmer = "AGAGAG")
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
positions2 <- transform(positions1, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AACAGT", "y_value"][[1]], Kmer = "AACAGT")
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
positions2
positions2 <- find_kmer_positions("../data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta", "AACAGT")
positions2 <- transform(positions2, enrich = complete_kmer_stats[complete_kmer_stats$Kmer == "AACAGT", "y_value"][[1]], Kmer = "AACAGT")
# Append the two dataframes to combine them
positions_combined <- rbind(positions1, positions2)
positions_combined <- positions_combined[order(positions_combined$Position), ]
positions_combined$next_position <- c(positions_combined$Position[-1], NA)
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(color = "black", size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(aes(color = Kmer), size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Coverage") +
ggtitle("Kmer Coverage on Genome (Filled Bars with Dots)")
#positions_combined$Kmer <- factor(positions_combined$Kmer)
ggplot(positions_combined, aes(x = Position, y = enrich)) +
geom_rect(aes(xmin = Position, xmax = next_position, ymin = 0, ymax = enrich),
fill = "lightblue", color = "lightblue", size = 1) +
geom_point(aes(color = Kmer), size = 1) +
theme_minimal() +
labs(x = "Genome Position", y = "Kmer Enrichment") +
ggtitle("Kmer Enrichment on Genome")
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(KmerEnrich)
library(data.table)
library(ShortRead)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats <- complete_kmer_stats %>%
filter(mean_count > 5)
ggplot(complete_kmer_stats, aes(x = x_value, y = y_value, color = accession_id)) +
geom_line(aes(group = Kmer), color = "grey", linetype = "dashed") +
geom_point(shape = 16, size = 2) +
geom_text(aes(label = paste0(Kmer, "\n", mean_count)),
vjust = -0.5, size = 2, show.legend = FALSE) +
labs(title = "frequency_virus / frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats$x_value) * 1.05,
y = max(complete_kmer_stats$y_value) * 1.1)
print(complete_kmer_stats)
library(Biostrings)
library(stringr)
library(dplyr)
library(ggplot2)
library(KmerEnrich)
library(data.table)
library(ShortRead)
virus_genome_path <- "../data_processed/virus/dengue/dengue_type_1/"
vector_genome_path <- c("../data_processed/vector/aedes/aegypty/SRR23079314",
"../data_processed/vector/aedes/albopictus/SRR8482202")
k <- 6
x <- 500
best_kmers_list <- common_kmers(virus_genome_path,k,x)
v_kmer_pos_df <- kmers_pos_df(virus_folder,best_kmers_list)
v_kmer_pos_df <- kmers_pos_df(virus_genome_path,best_kmers_list)
v_kmers_stats <- get_virus_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, fastq_path_list)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, vector_genome_path)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats <- complete_kmer_stats %>%
filter(mean_count > 5)
ggplot(complete_kmer_stats, aes(x = x_value, y = y_value, color = accession_id)) +
geom_line(aes(group = Kmer), color = "grey", linetype = "dashed") +
geom_point(shape = 16, size = 2) +
geom_text(aes(label = paste0(Kmer, "\n", mean_count)),
vjust = -0.5, size = 2, show.legend = FALSE) +
labs(title = "frequency_virus / frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats$x_value) * 1.05,
y = max(complete_kmer_stats$y_value) * 1.1)
get_stats_kmers_all_types <- function(df_virus) {
# Drop lines that correspond to the distance between first nucleotide and first kmer
df_virus <- df_virus %>%
filter(!is.na(segm_size))
virus_values <- df_virus %>%
group_by(SequenceName, Kmer,Type) %>%
summarize(mean_segm_size = mean(log10(segm_size), na.rm = TRUE),
sd_segm_size = ifelse(n() > 1, sd(log10(segm_size), na.rm = TRUE), 0),
count = n(),
freq = n()/max(Position),
.groups = 'drop')
results <- virus_values %>%
group_by(Kmer) %>%
summarize(
mean_mean_log10_segments = mean(mean_segm_size, na.rm = TRUE),
mean_sd_log10_segments = mean(sd_segm_size, na.rm = TRUE),
mean_count = mean(count, na.rm = TRUE),
sd_count = ifelse(n() > 1, sd(count, na.rm = TRUE), NA),
mean_freq_virus = mean(freq, na.rm = TRUE),
.groups = 'drop'
)
return(results)
}
v_kmers_stats <- get_stats_kmers_all_types(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, fastq_path_list)
get_stats_kmers_all_types <- function(df_virus) {
# Drop lines that correspond to the distance between first nucleotide and first kmer
df_virus <- df_virus %>%
filter(!is.na(segm_size))
virus_values <- df_virus %>%
group_by(SequenceName, Kmer,Type) %>%
summarize(mean_segm_size = mean(log10(segm_size), na.rm = TRUE),
sd_segm_size = ifelse(n() > 1, sd(log10(segm_size), na.rm = TRUE), 0),
count = n(),
freq = n()/max(Position),
.groups = 'drop')
results <- virus_values %>%
group_by(Kmer) %>%
summarize(
mean_mean_log10_segments = mean(mean_segm_size, na.rm = TRUE),
mean_sd_log10_segments = mean(sd_segm_size, na.rm = TRUE),
mean_count = mean(count, na.rm = TRUE),
sd_count = ifelse(n() > 1, sd(count, na.rm = TRUE), NA),
mean_freq_virus = mean(freq, na.rm = TRUE),
.groups = 'drop'
)
return(results)
}
v_kmers_stats <- get_stats_kmers_all_types(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, vector_genome_path)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats_filtered <- complete_kmer_stats %>%
group_by(Kmer) %>%
filter(all(mean_count > 10)) %>%
ungroup()
# Now plot the filtered data
ggplot(complete_kmer_stats_filtered, aes(x = x_value, y = y_value, color = Kmer, shape = accession_id)) +
geom_point(size = 2) +  # Points for each observation
labs(title = "frequency_virus / frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats_filtered$x_value) * 1.05,
y = max(complete_kmer_stats_filtered$y_value) * 1.1)
virus_genome_path <- "../data_processed/virus/dengue/dengue_type_1/PQ357540.1.fasta"
vector_genome_path <- c("../data_processed/vector/aedes/aegypty/SRR23079314",
"../data_processed/vector/aedes/albopictus/SRR8482202")
k <- 6
x <- 500
best_kmers_list <- common_kmers(virus_genome_path,k,x)
v_kmer_pos_df <- kmers_pos_df(virus_genome_path,best_kmers_list)
v_kmers_stats <- get_virus_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, vector_genome_path)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats <- complete_kmer_stats %>%
filter(mean_count > 5)
ggplot(complete_kmer_stats, aes(x = x_value, y = y_value, color = accession_id)) +
geom_line(aes(group = Kmer), color = "grey", linetype = "dashed") +
geom_point(shape = 16, size = 2) +
geom_text(aes(label = paste0(Kmer, "\n", mean_count)),
vjust = -0.5, size = 2, show.legend = FALSE) +
labs(title = "frequency_virus / frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats$x_value) * 1.05,
y = max(complete_kmer_stats$y_value) * 1.1)
get_stats_kmers_all_types <- function(df_virus) {
# Drop lines that correspond to the distance between first nucleotide and first kmer
df_virus <- df_virus %>%
filter(!is.na(segm_size))
virus_values <- df_virus %>%
group_by(SequenceName, Kmer,Type) %>%
summarize(mean_segm_size = mean(log10(segm_size), na.rm = TRUE),
sd_segm_size = ifelse(n() > 1, sd(log10(segm_size), na.rm = TRUE), 0),
count = n(),
freq = n()/max(Position),
.groups = 'drop')
results <- virus_values %>%
group_by(Kmer) %>%
summarize(
mean_mean_log10_segments = mean(mean_segm_size, na.rm = TRUE),
mean_sd_log10_segments = mean(sd_segm_size, na.rm = TRUE),
mean_count = mean(count, na.rm = TRUE),
sd_count = ifelse(n() > 1, sd(count, na.rm = TRUE), NA),
mean_freq_virus = mean(freq, na.rm = TRUE),
.groups = 'drop'
)
return(results)
}
v_kmers_stats <- get_stats_kmers_all_types(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, vector_genome_path)
complete_kmer_stats$x_value <- complete_kmer_stats$mean_count / mean(c(mean(complete_kmer_stats$mean_sd_log10_segments),complete_kmer_stats$mean_sd_log10_segments))
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
complete_kmer_stats_filtered <- complete_kmer_stats %>%
group_by(Kmer) %>%
filter(all(mean_count > 10)) %>%
ungroup()
# Now plot the filtered data
ggplot(complete_kmer_stats_filtered, aes(x = x_value, y = y_value, color = Kmer, shape = accession_id)) +
geom_point(size = 2) +  # Points for each observation
labs(title = "frequency_virus / frequency_mos",
x = "count per virus / sd segm virus",
y = " log10(frequency virus) - log10(frequency mos)") +
theme_minimal() +
theme(axis.text.x = element_text(hjust = 1)) +
expand_limits(x = max(complete_kmer_stats_filtered$x_value) * 1.05,
y = max(complete_kmer_stats_filtered$y_value) * 1.1)
library(KmerEnrich)
library(dplyr)
library(psych)
library(ggplot2)
virus_path <- "data_processed/virus/dengue/dengue_type_1/NC_001477.1.fasta"
fastq_path_list <- c("data_processed/vector/aedes/aegypty/SRR23079314",
"data_processed/vector/aedes/albopictus/SRR8482202",
"data_processed/vector/aedes/albopictus/SRR8482203",
"data_processed/vector/aedes/albopictus/SRR8482204")
k <- 6
x <- 500
generate_kmers <- function(k,sample_size) {
bases <- c("A", "C", "T", "G")
all_kmers <- as.vector(apply(expand.grid(rep(list(bases), k)), 1, paste, collapse = ""))
kmers <- sample(all_kmers, sample_size)
return(kmers)
}
kmers <- generate_kmers(6,400)
v_kmer_pos_df <- kmers_pos_df(virus_path, kmers)
v_kmers_stats <- get_virus_stats_kmers(v_kmer_pos_df)
complete_kmer_stats <- get_vector_stats_kmers(v_kmers_stats, fastq_path_list)
complete_kmer_stats$y_value <- (log10(complete_kmer_stats$mean_freq_virus) - log10(complete_kmer_stats$freq_m))
df_selected <- complete_kmer_stats %>%
select(accession_id, y_value)
data_for_icc <- df_selected %>%
group_by(accession_id) %>%
mutate(row = row_number()) %>%
tidyr::pivot_wider(names_from = accession_id, values_from = y_value) %>%
select(-row)
icc_result <- ICC(data_for_icc)
print(icc_result)
ggplot(complete_kmer_stats, aes(x = factor(Kmer), y = y_value, color = accession_id)) +
geom_line(aes(group = Kmer), color = "gray", position = position_dodge(width = 0.2)) +  # Lines are gray
geom_point() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(x = "K-mer Name", y = "log10(freq virus) - log10(freq mos)", title = "ICC log10(freq virus) - log10(freq mosquito) of kmer appearing more than 5 times/virus") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1),
plot.margin = margin(10, 30, 10, 10),
plot.title = element_text(size = 10)
)
virus_folder <- "data_processed/virus/japanese_encephalitis_virus/"
vector_genome_path <- c("data_processed/vector/aedes/albopictus/SRR8482202")
k <- c(5,6,7)
x <- 500
